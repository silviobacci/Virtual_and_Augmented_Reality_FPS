
var CamPos = [0.0, 30, 30.0];
var CamDir; 

var switched_view = false; 
var is_first = true;
var last_mouse_x = 0.0; 
var last_mouse_y = 0.0;
var last_mouse_z = 0.0;
var last_deltax = 0;
var counter = 0;
var meshRot_x = 0.0;
var meshRot_y = 0.0;
var offset_w = 8;
var offset_h = 30;
var meshRot_y_cumulative = 0.0;

//=====================================================================================================
function CameraMoveMouse()
//=====================================================================================================
{	
	var cam = CameraGetCurrent();
	var	rot_sensitivity = 0.1;			
 	var deltax = Mouse.X;
	var deltay = Mouse.Y;
	
	Mouse.SetStatus(0.5,0.5);
 	SetCursorPos(0.5,0.5);

	if(window_w % 2 != 0)
		offset_w =9;
	
	if(window_h % 2 == 0)
		offset_h =31;

	if(deltax != 0)
		deltax = Floor( deltax -  (window_w/2)+offset_w);
	if(deltay != 0)
		deltay = Ceil( deltay - 	(window_h/2)+offset_h);


	cam.RotateGlobal(deltax * rot_sensitivity, 0, 1, 0);
	if(is_first)
		cam.RotateLocal (deltay * rot_sensitivity, 1, 0, 0);
	
	my_players.array_player[0].movingDirection = cam.GetDirection();
	my_players.array_player[0].shootingDirection = cam.GetDirection();
	
	meshRot_x = deltax;
	meshRot_y = deltay;

	my_players.array_player[0].obj_player.Rotate (-meshRot_x* rot_sensitivity, 0, 1, 0);
	my_players.array_player[0].obj_player.Rotate (meshRot_y* rot_sensitivity, 1, 0, 0);
	
}


function FirstPersonView(){
	meshRot_y_cumulative+= meshRot_y;
	CameraGetCurrent().SetPosition(my_players.array_player[0].obj_player.getPosition()+[0,FIRST_PERSON_HEIGHT*cos(meshRot_y_cumulative* 0.1*GRAD_TO_RAD),FIRST_PERSON_HEIGHT*sin(meshRot_y_cumulative* 0.1*GRAD_TO_RAD)] ); 	

}

function BackSideView(){		
 	var pos =[-BACK_SIDE_WIDTH *my_players.array_player[0].movingDirection[0],BACK_SIDE_HEIGHT,-BACK_SIDE_WIDTH *my_players.array_player[0].movingDirection[2]];
 	CameraGetCurrent().SetPosition(my_players.array_player[0].obj_player.getPosition()+ pos);
 
}

function init_camera() {
	CamDir = CameraGetDirection();
	CameraGetCurrent().SetPosition(CamPos);
	CameraGetCurrent().SetDirection(-CamDir);
}

function update_camera() {
	if(keypressed(VK_LCONTROL)){
    	is_first = !is_first;
    	switched_view = true;
  
    }
    	
	if(!is_first){
		BackSideView();
		CameraMoveMouse();
		if(switched_view){
		//	CameraGetCurrent().SetDirection(-CamDir);
			CameraGetCurrent().SetPosition(CamPos);
			switched_view = false; 
		}

	}
	else{
		firstPersonView();
    	CameraMoveMouse();
    }
}
