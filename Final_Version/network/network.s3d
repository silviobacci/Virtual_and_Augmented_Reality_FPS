#define	RECEIVE_PERIOD		1

#define SOURCE_IP_ADDRESS	"0.0.0.0"
#define DEST_IP_ADDRESS		"192.168.1.255"	
#define PORT				50023	

#define TIME_FILTER			1000	

#define POSITION_PDU 	1
#define BULLET_PDU		2
#define	KEEPALIVE_PDU	3
#define	EXPLOSION_PDU	4
#define	SCORE_PDU		5
#define	RESET_PDU		6

var my_network;

class network{
	var channel;
	var id;
	
	init();
	create_RESET_PDU();
	create_KEEPALIVE_PDU();
	create_POSITION_PDU(position, direction, velocity);
	create_SCORE_PDU(scores);
	create_BULLET_PDU(type, position, direction, fire_life);
	create_EXPLOSION_PDU(enemy);
	send(PDU);
	receive();
};

function network::init() {
	channel = NetCreateChannel(PORT, SOURCE_IP_ADDRESS, VR_NO_BLOCKING);

	SetTimeStep(RECEIVE_PERIOD);
	
	id = 1;
}

function network::create_RESET_PDU() {
	var PDU = vector(2);
	PDU[0] = RESET_PDU;
	PDU[1] = id;
}

function network::create_KEEPALIVE_PDU() {
	var PDU = vector(2);
	PDU[0] = KEEPALIVE_PDU;
	PDU[1] = id;
}

function network::create_POSITION_PDU(position, direction, velocity) {
	var PDU = vector(7);
	PDU[0] = POSITION_PDU;
	PDU[1] = id;
	PDU[2] = position[0];
	PDU[3] = position[1];
	PDU[4] = position[2];
	PDU[5] = direction;	
	PDU[6] = velocity;	
}

function network::create_SCORE_PDU(scores) {
	var n_players = len(scores);
	var PDU = vector(n_players);
	PDU[0] = SCORE_PDU;
	PDU[1] = id;
	for(var i = 0; i < n_players; i++)
		PDU[2 + i] = scores[i];
}

function network::create_BULLET_PDU(type, position, direction, fire_life) {
	var PDU = vector(7);
	PDU[0] = BULLET_PDU;
	PDU[1] = id;
	PDU[2] = type;
	PDU[3] = position[0];
	PDU[4] = position[1];
	PDU[5] = position[2];
	PDU[6] = fire_life;
	PDU[7] = direction;	
}

function network::create_EXPLOSION_PDU(enemy) {
	var PDU = vector(3);
	PDU[0] = RESET_PDU;
	PDU[1] = id;
	PDU[2] = enemy;
}

function network::send(PDU){
	NetVarSendTo(DEST_IP_ADDRESS, PORT, PDU);
}

function network::receive() {
	var address = 0;	
	return NetVarReceiveFrom(channel, &address);
}