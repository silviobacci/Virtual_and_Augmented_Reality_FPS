#define MAX_VERT_ROT 	90
#define OFFEST_WIDTH	0 //9
#define OFFEST_HEIGHT	0 //31

var CamPos = [0.0, 30, 30.0];
var CamDir; 

var switched_view = false; 
var is_first = true;
var last_mouse_x = 0.0; 
var last_mouse_y = 0.0;
var last_mouse_z = 0.0;
var last_deltax = 0;
var counter = 0;
var meshRot_x = 0.0;
var meshRot_y = 0.0;
var offset_w = 8;
var offset_h = 30;
var meshRot_y_cumulative = 0.0;
var meshRot_x_cumulative = 0.0;
var rho = 1.2;

//=====================================================================================================
function CameraMoveMouse()
//=====================================================================================================
{	
	var cam = CameraGetCurrent();
	var	rot_sensitivity = 0.1;			
 	var deltax = Mouse.X;
	var deltay = Mouse.Y;
	
	Mouse.SetStatus(0.5, 0.5);
 	SetCursorPos(0.5, 0.5);

	if(deltax != 0)
		deltax = Floor(deltax - (window_w/2) + OFFEST_WIDTH);
	if(deltay != 0)
		deltay = Ceil(deltay - (window_h/2) + OFFEST_HEIGHT);

	meshRot_x_cumulative+= deltax;
	meshRot_y_cumulative+= deltay;

	if(abs(meshRot_y_cumulative) >  MAX_VERT_ROT){
		meshRot_y_cumulative-= deltay;
		deltay -= deltay * rot_sensitivity;
		deltay = 0;
	}

	cam.RotateGlobal(deltax * rot_sensitivity, 0, 1, 0);
	
		cam.RotateLocal (deltay * rot_sensitivity, 1, 0, 0);

	my_players.array_player[0].movingDirection = cam.GetDirection();
	my_players.array_player[0].shootingDirection = cam.GetDirection();

}

function atan2pi(x,y){
	var phi = atan2(x,y);

	if(phi < 0)
		phi = 2*PI - abs(phi);

	return phi;
}

function FirstPersonView(){

	var theta= PI/2 - atan2pi((my_players.array_player[0].movingDirection[0]^2 + my_players.array_player[0].movingDirection[2]^2)^(1/2),my_players.array_player[0].movingDirection[1]);	
	var phi = atan2pi(my_players.array_player[0].movingDirection[0],my_players.array_player[0].movingDirection[2]);

	var thetat = theta * RAD_TO_GRAD;
	var phit = phi * RAD_TO_GRAD;

	var cam_offset = rho*[-sin(theta)*sin(phi),cos(theta),-sin(theta)*cos(phi)];

	my_players.array_player[0].obj_player.setRotation(phit, 0, 1, 0);
	my_players.array_player[0].obj_player.rotate(-thetat, 1, 0, 0);

	//CameraGetCurrent().setPosition(my_players.array_player[0].position +cam_offset);
	var backside_offset = [0,0,0];
	if(!is_first)
		backside_offset = [-my_players.array_player[0].movingDirection[0]*2,1,-my_players.array_player[0].movingDirection[2]*2];
	
	CameraGetCurrent().setPosition(my_players.array_player[0].position +cam_offset+backside_offset);
}

function update_camera() {
	if(keypressed(VK_LCONTROL)){
    	is_first = !is_first;
    	switched_view = true;
    	 meshRot_y_cumulative = 0.0;
		meshRot_x_cumulative = 0.0;
  
    }
    	
	
		firstPersonView();
    	CameraMoveMouse();
    
}
