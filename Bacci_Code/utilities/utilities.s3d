#define FIRST_PERSON_VIEW			0
#define THIRD_PERSON_VIEW			1
#define FREE_CAMERA_VIEW			2
#define GUNSIGHT_VIEW				3
#define N_VIEWS						2

#define	NOT_CONNECTED				0
#define	MANAGING					1
#define	CONNECTING					2
#define	READY_USER					3
#define	READY_MNG					4
#define	IN_GAME						5
#define END_GAME					6

#define	FRAME_RATE					60
#define TIME_STEP_UPDATE 			1
#define NETWORK_LOOP_PERIOD			2	
#define PHYSICAL_LOOP_PERIOD		10

var event_networking_id;
var event_physics_id;

var timer_network_loop = 0;
var timer_physical_loop = 0;
var previous_time = 0;
var delta_t;

var current_view = FIRST_PERSON_VIEW;

var my_network;

var window;
var window_w;
var window_h;
var resolution;

var to_update = false;

function atan2pi(x, y){
	var phi = atan2(x, y);

	if(phi < 0)
		phi = 2*PI - abs(phi);

	return phi;
}

function dist2(u, v){
	return sqrt((u.x - v.x)^2 + (u.z - v.z)^2);
}

function dist3(u, v){
	return sqrt((u.x - v.x)^2 + (u.y - v.y)^2 + (u.z - v.z)^2);
}

function get_resolution() {
	var size = window.GetSize();
	window_w = ToFloat(size[0]);
	window_h = ToFloat(size[1]);
	return window_w / window_h;
}

function quit_game() {
	window.Fullscreen(false);
	window.Quit();
}

function exit_game(pause, startup) {
	pause.show_menu = false;
	startup.show_menu = true;
	my_network.status = NOT_CONNECTED;
}