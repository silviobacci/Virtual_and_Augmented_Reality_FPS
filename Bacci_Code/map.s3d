#define UNIT_SIZE			0.005
#define BORDER_SIZE_WALL	0.001
#define BORDER_SIZE_PLAYER	0

#define START_POINT_X		0.01
#define START_POINT_Y		0.01

#define MAP_WIDTH			32
#define MAP_HEIGHT			32

class map{
	var matrix_level;
	var map_position_x;
	var map_position_y;
	var rows;
	var columns;
	var width;
	var height;
	var window;
	var scaling_factor_x;
	var scaling_factor_y;
	
	init(ml);
	draw(players);
	update(matrix_level);
	
	draw_rect(to_draw_x, to_draw_y, border);
	draw_background();
	draw_player(players_position);
	draw_wall();
};

function map::init(ml) {
	window = CVmWebBrowser ();
	window.Fullscreen();
	
	matrix_level = ml;
	
	rows = len(matrix_level);
	columns = len(matrix_level[0]);
	
	width = columns * UNIT_SIZE;
	
	map_position_x = START_POINT_X;
	
	scaling_factor_x = 1;
	
	ConsoleFont("Arial", 12);
}

function map::draw_rect(to_draw_x, to_draw_y, border) {
	var x = START_POINT_X + (UNIT_SIZE * to_draw_x) * scaling_factor_x;
	var y = START_POINT_Y + (UNIT_SIZE * to_draw_y) * scaling_factor_y;
	var w = (UNIT_SIZE + border) * scaling_factor_x;
	var h = (UNIT_SIZE + border) * scaling_factor_y;
	
	ConsoleFilledRect(x, y, w, h);
}

function map::draw_background() {
	ConsoleColor(1, 1, 1, 1);
	ConsoleFilledRect(map_position_x, map_position_y, width, height);
}

function map::draw_wall() {
	ConsoleColor(1, 0, 0, 1);
	for(var i = 0; i < rows; i++)
		for(var j = 0; j < columns; j++)
			if(matrix_level[i][j] == 1)
				draw_rect(j, i + 1, BORDER_SIZE_WALL);
}

function map::draw_player(players_position) {
	ConsoleColor(0, 1, 0, 1);
	for(var i = 0; i < len(players_position); i++)
		draw_rect(players_position[i][0], players_position[i][2], BORDER_SIZE_PLAYER);
}

function map::draw(players_position) {
	var size = window.GetSize();
	scaling_factor_y = size[0] / size[1];
	height = (rows * UNIT_SIZE) * scaling_factor_y;
	map_position_y = START_POINT_Y + height;
	
	draw_background();
	draw_wall();
	draw_player(players_position);		
	ConsoleFinish();
}