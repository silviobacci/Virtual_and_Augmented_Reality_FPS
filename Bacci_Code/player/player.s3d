#define SWAT_START_WALK 	16
#define SWAT_END_WALK 		48
#define SWAT_ONE_STEP 		16
#define SWAT_TOTAL_FRAMES 	32
#define SWAT_FRAME_STEP 	0.35
#define CLIP_SIZE 			500

#define FRONT				1
#define REAR				2

class player{
	//Player-related 
	var mesh_player_lower;
	var mesh_player_upper;
	
	var obj_player_lower;
	var obj_player_upper;
	var obj_player;
	
	var wall_height;
	var position;
	var angle_direction;
	var moving_direction;
	var temp_direction;
	var current_frame; 
	var id;
	var front_speed;
	var side_speed;
	var front_direction;
	var side_direction;
	
	var is_falling;
	var is_side_walking;
	var fx_step;
	
	var bounding_box;
	var mesh_bounding_box;
	var obj_bounding_box;
	
	//jump related 
	var is_jumping;
	var dx;
	var dy;
	var accx;
	var accy;
	var speedx;
	var speedy; 
	var angle;
	var delta_t;
	var fx_jump;
	
	//Player-associated
	var my_railgun; 
	var my_rocketl; 
	var current_weapon;
	
	init(i, p, o);
	create_player();
	
	create_bounding_box();
	check_collision(matrix_level);
	
	get_position();
	
	change_weapon(new_weapon);
	shoot();
	
	reset_jump_dynamics();
	init_jump_dynamic();
	update_jump_dynamics();
	
	update_speed();
	update_position();
	update_moving_direction();
	
	update(matrix_level);
	
	draw();
};

function player::create_player(){
	mesh_player_lower = CVmNewMesh("swat_lower.aam");
	var sf1 = mesh_player_lower.Normalize(1);
	
	mesh_player_upper = CVmNewMesh("swat_upper.aam"); 
	mesh_player_upper.scale(sf1);
	
	my_railgun.create_weapon(RAILGUN_MESH, sf1);
	my_rocketl.create_weapon(ROCKETL_MESH, sf1);
	
	obj_player_upper = CVmObj(mesh_player_upper);
	obj_player_lower = CVmObj(mesh_player_lower);
	obj_player = CVmObj();
	
	obj_player.AddChild(obj_player_lower);
	obj_player.AddChild(obj_player_upper);
	obj_player_upper.AddChild(current_weapon.obj_gun);
	obj_player_upper.setPivotPoint(0,0,0);
	obj_player.setposition(position);
}

function player::init(i, p, o){
	id = 				i;
	position = 			p;
	current_frame = 	0;
	side_speed =		0.0;
	front_speed =		0.0;
	angle_direction = 	o;
	update_moving_direction(); 
	is_falling =		false;
	is_jumping = 		false;
	is_side_walking =	false;
	delta_t = 			TIME_STEP_UPDATE;
	front_direction = 	moving_direction;
	side_direction = 	moving_direction;
	temp_direction = 	FRONT;
	my_railgun = 		weapon();
	my_rocketl = 		weapon();
	current_weapon =	my_rocketl;
	
	my_railgun.init(RAILGUN_NAME, RAILGUN_N_BULLETS, RAILGUN_SHOOT_FORCE, RAILGUN_BULLET_RADIUS, RAILGUN_BULLET_MASS);
	my_rocketl.init(ROCKETL_NAME, ROCKETL_N_BULLETS, ROCKETL_SHOOT_FORCE, ROCKETL_BULLET_RADIUS, ROCKETL_BULLET_MASS);
    
    create_player();
    create_bounding_box();
    change_weapon(my_rocketl);
}

function player::get_position(){
	return obj_player.GetPosition();
}

function player::draw(){
	foreach(var o in obj_bounding_box)	
		o.draw();										
	obj_player.draw(VR_FRAMENUMBER, SWAT_START_WALK + current_frame);
	current_weapon.draw();
}