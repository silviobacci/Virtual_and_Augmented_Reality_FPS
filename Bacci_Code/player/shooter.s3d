function player::change_weapon(new_weapon){
	if(current_weapon != null)
		obj_player_upper.RemoveChild(current_weapon.obj_gun);
	current_weapon = new_weapon;
	obj_player_upper.AddChild(current_weapon.obj_gun);
	if(new_weapon == my_rocketl)
		duplicate = 1;
	else
		duplicate = 0;
	my_sound_player.play_change(position);
}

function player::shoot(){
	current_weapon.shoot(position, angle_direction, CameraGetCurrent().GetDirection());
}

function player::get_shooted_bullets(){
	var shooted_bullets = array(0);
	foreach(var bullet in my_railgun.shooted_bullets)
		if(bullet.is_flying) {
			var to_add = array(0);
			aadd(to_add, bullet);
			aadd(to_add, RAILGUN_BULLET);
			aadd(shooted_bullets, to_add);	
		}

	
	foreach(var bullet in my_rocketl.shooted_bullets)
		if(bullet.is_flying) {
			var to_add = array(0);
			aadd(to_add, bullet);
			aadd(to_add, ROCKETL_BULLET);
			aadd(shooted_bullets, to_add);	
		}
		
	return shooted_bullets;
}